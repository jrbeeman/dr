<?php

define('DR_POST_TYPE', 'dr_post');
define('DR_USER_TYPE', 'dr_user');
define('DR_COLLECTION_TYPE', 'dr_collection');
define('DR_CHART_WIDTH', 600);
define('DR_CHART_HEIGHT', 250);
define('DR_CHART_BG', 'f8f8f8');

/**
 * Implementation of hook_menu().
 */
function dr_menu() {
  $items = array();
  // Taxonomy report
  $items['report/taxonomy'] = array(
    'page callback' => 'dr_report_taxonomy',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Utility for reports
 * - Make sure there's an entry for every day in the thread
 */
function dr_fill_array_dates(&$dates, $start, $end) {
  $one_day = 24 * 60 * 60;
  $two_days = 2 * $one_day;

  // Make sure the array has at least 3 items
  if ($start == $end || ($end - $start) < $one_day) {
    $start -= $one_day;
    $end += $one_day;
  }
  if (($end - $start) < $two_days) {
    $end += $one_day;
  }

  $date = $start;
  while ($date <= $end) {
    if (!array_key_exists($date, $dates)) {
      $dates[$date] = 0;
    }
    $date += (24 * 60 * 60);
  }
  ksort($dates);
}

function dr_filter_array(&$data, $max) {
  $count = count($data);
  $gi = 0; // global counter that doesn't reset (for the run of the method)
  if ($count > $max) {
    $new_data = array();
    $scale = round($count / $max);
    if ($scale > 1) {
      $i = 0;
      $key_tmp = '';
      $count_tmp = 0;
      foreach ($data as $key => $value) {
        $i++;
        $gi++;
        $value_tmp += $value;
        if ($i == 1) {
          $key_tmp = $key;
        }
        if ($i == $scale || $gi == $count) {
          $new_data[$key_tmp] = $value_tmp;
          $i = 0;
          $value_tmp = 0;
        }
      }
      $data = $new_data;
    }
  }
}

/**
 * Implementation of hook_block().
 */
function dr_block($op = 'list', $delta = 0, $edit = array()) {
  if ($op == 'list') {
    $blocks['taxonomy'] = array(
      'info' => t('DR Report: Taxonomy'),
    );
    $blocks['collection_taxonomy'] = array(
      'info' => t('DR Report: Collection taxonomy'),
    );
    $blocks['collection_activity'] = array(
      'info' => t('DR Report: Collection activity by date'),
    );
    $blocks['collection_taxonomy_activity'] = array(
      'info' => t('DR Report: Collection taxonomy activity by date'),
    );
    $blocks['post_taxonomy'] = array(
      'info' => t('DR Report: Post taxonomy'),
    );
    $blocks['post_activity'] = array(
      'info' => t('DR Report: Post activity by date'),
    );
    $blocks['post_taxonomy_activity'] = array(
      'info' => t('DR Report: Post taxonomy activity by date'),
    );
    $blocks['user_taxonomy'] = array(
      'info' => t('DR Report: User taxonomy'),
    );
    $blocks['user_activity'] = array(
      'info' => t('DR Report: User activity by date'),
    );
    $blocks['user_taxonomy_activity'] = array(
      'info' => t('DR Report: User taxonomy activity by date'),
    );

    // Set the caching for all blocks to be per-page
    foreach ($blocks as $key => $block) {
      $block['cache'] = BLOCK_CACHE_PER_PAGE;
      $blocks[$key] = $block;
    }
    return $blocks;
  }

  if ($op == 'view') {
    // Load the reports include
    static $loaded = FALSE;
    if (!$loaded) {
      module_load_include('inc', 'dr', 'dr.reports');
      $loaded = TRUE;
    }
    $function = 'dr_block_'. $delta;
    $block = $function();
    return $block;
  }
}

